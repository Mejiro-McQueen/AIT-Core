#!/usr/bin/env python3
import asyncio
import websockets
import json


async def telemetry_view():
    async with websockets.connect("ws://localhost:8000/command_loader") as websocket:
        msg = ("CL.Execute", "MISSION_MANAGER_SWITCH_MODE NO_OVERWRITE_IMMEDIATE 0 0 8 Downlink")
        msg = ("CL.Execute", "INNOFLIGHT_SCR106_INIT_AND_POWER_TRANSMITTER NO_OVERWRITE_IMMEDIATE 0 2 36000 60 /mnt/fsw/configuration/innoflightScr106/txHighRateConfig.xml'")
        # msg = ('CL.Validate", "MISSION_MANAGER_SWITCH_MODE NO_OVERWRITE_IMMEDIATE 0 0 8 Downlink 0')
        # msg = ('CL.Validate", "/sunrise/data/products/10004/uplink/ben.cl')
        # msg = ('CL.Execute", "/sunrise/data/products/10004/uplink/ben.cl')
        # msg = ('CL.Validate", "/sunrise/data/products/10004/uplink/uplink_commands_mnt_data/telemetryprocessorconfig_updated_all.ipk_uplink_products/')
        #msg = ("CL.Execute", "INNOFLIGHT_SCR106_ENABLE_DATA_FLOW NO_OVERWRITE_IMMEDIATE 0 0 21600 0.1 0.0")
        #msg = ("CL.Validate", "INNOFLIGHT_SCR106_ENABLE_DATA_FLOW NO_OVERWRITE_IMMEDIATE 0 0 21600 0.1 0.0")
        #msg = ('CL.Execute', '/sunrise/SunRISE_uplink_sandbox/files/dtf21_march_2022/uplink_commands/alan_didion_slothstronaut.png_uplink_products/')
        #msg = ("CL.Execute", "/sunrise/test.cl")

        msg = json.dumps({'topic': msg[0],
                          'message': msg[1]})
        await websocket.send(msg)
        resp = await websocket.recv()
        resp = json.loads(resp)
        resp = json.dumps(resp, indent=4)
        print(resp)
        print("\n")

if __name__ == "__main__":
    try:
        loop = asyncio.get_event_loop()
        loop.run_until_complete(telemetry_view())
    except Exception as e:
        print(e)
    except KeyboardInterrupt:
        pass
        
